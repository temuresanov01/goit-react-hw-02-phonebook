{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","sectionTitle","defaultProps","ContactList","filteredContacts","handleDelete","mainContainer","map","contact","newContact","newContactName","name","number","type","btn","onClick","id","ContactForm","state","saveInputValueToState","evt","setState","target","value","handleSubmitForm","preventDefault","props","findDuplicate","submitNewContact","resetForm","mainForm","onSubmit","this","inputContainer","labelName","onChange","inputName","pattern","required","placeholder","buttonAddContact","Component","Filter","filter","filterContacts","htmlFor","App","contacts","data","newTodo","uuid","prevState","some","alert","formattedContacts","toLowerCase","trim","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10063ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__1BfkA\",\"inputContainer\":\"ContactForm_inputContainer__3gwk0\",\"labelName\":\"ContactForm_labelName__3nqPG\",\"inputName\":\"ContactForm_inputName__3c9Al\",\"buttonAddContact\":\"ContactForm_buttonAddContact__5t7Qq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__2U-T8\",\"ContactList\":\"ContactList_ContactList__CPEQG\",\"newContact\":\"ContactList_newContact__2JSuq\",\"newContactName\":\"ContactList_newContactName__sJxa6\",\"btn\":\"ContactList_btn__13vm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Filter_mainContainer__38__7\",\"inputContainer\":\"Filter_inputContainer__bah38\",\"labelName\":\"Filter_labelName__2CMna\",\"inputName\":\"Filter_inputName__2TPCQ\",\"buttonAddContact\":\"Filter_buttonAddContact__2g80f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__CVWmm\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={s.sectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filteredContacts, handleDelete }) => {\n  return (\n    <div className={s.mainContainer}>\n      <ul>\n        <p className={s.ContactList}>Contact List</p>\n        {filteredContacts.map(contact => (\n          <li className={s.newContact} key={contact.id}>\n            <p className={s.newContactName}>\n              {contact.name} : {contact.number}\n            </p>\n            <button\n              type=\"button\"\n              className={s.btn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    submitNewContact: PropTypes.func.isRequired,\n    findDuplicate: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  saveInputValueToState = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  handleSubmitForm = evt => {\n    evt.preventDefault();\n\n    if (this.props.findDuplicate(this.state.name)) {\n      this.props.submitNewContact(this.state);\n      this.resetForm();\n    }\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '', id: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={s.mainForm} onSubmit={this.handleSubmitForm}>\n          <div className={s.inputContainer}>\n            <label className={s.labelName}>Name</label>\n            <input\n              onChange={this.saveInputValueToState}\n              type=\"text\"\n              name=\"name\"\n              className={s.inputName}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Rosie Simpson,  d'Artagnan и т. п.\"\n              required\n              placeholder=\"Enter Name\"\n            ></input>\n          </div>\n\n          <div className={s.inputContainer}>\n            <label className={s.labelName}>Number</label>\n            <input\n              onChange={this.saveInputValueToState}\n              type=\"tel\"\n              name=\"number\"\n              className={s.inputName}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              placeholder=\"Enter Number\"\n            />\n          </div>\n          <button type=\"submit\" className={s.buttonAddContact}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, filterContacts }) => {\n  return (\n    <div className={s.mainContainer}>\n      <div className={s.inputContainer}>\n        <label className={s.labelName} htmlFor=\"filter\">\n          Find contact by name\n        </label>\n        <input\n          onChange={filterContacts}\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filter}\n          className={s.inputName}\n          placeholder=\"Filter\"\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterContacts: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './App.css';\nimport Section from './components/Section/Section';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  submitNewContact = data => {\n    const newTodo = {\n      name: data.name,\n      number: data.number,\n      id: uuid(),\n    };\n\n    this.setState(prevState => {\n      const newContact = [newTodo, ...prevState.contacts];\n      return { contacts: newContact };\n    });\n  };\n\n  findDuplicate = newContactName => {\n    if (!newContactName) {\n      alert('The field cannot be empty!');\n      return false;\n    }\n    const isDublicate = this.state.contacts.some(\n      contact => contact.name === newContactName,\n    );\n\n    if (isDublicate) {\n      alert('This Name already exist!' + newContactName);\n      return false;\n    }\n    return true;\n  };\n\n  handleDelete = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterContacts = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  render() {\n    const formattedContacts = this.state.filter.toLowerCase().trim();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(formattedContacts),\n    );\n\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <ContactForm\n            submitNewContact={this.submitNewContact}\n            findDuplicate={this.findDuplicate}\n          />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <Filter\n            filter={this.state.filter}\n            filterContacts={this.filterContacts}\n          />\n\n          <ContactList\n            filteredContacts={filteredContacts}\n            handleDelete={this.handleDelete}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}